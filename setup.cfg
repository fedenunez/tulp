[metadata]
name = tulp
version = attr: tulp.version.VERSION
description = TULP: A command line tool, in the best essence of POSIX tooling, that will help you to process, filter, and create data using AI models.
long_description = file: README.md
long_description_content_type = text/markdown
author = Federico NuÃ±ez
author_email = fedenunez@gmail.com
url = https://github.com/fedenunez/tulp
license = GPL-2.0 # Use SPDX identifier if possible, or specify file
license_files = LICENSE # If you have a LICENSE file
classifiers =
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
  Programming Language :: Python :: 3.11
  License :: OSI Approved :: GNU General Public License v2 (GPLv2)
  Operating System :: OS Independent
  Environment :: Console
  Intended Audience :: Developers
  Intended Audience :: System Administrators
  Topic :: Utilities
  Topic :: Text Processing

[options]
packages = find:
python_requires = >=3.8
zip_safe = False # Recommended for includes like YAML
include_package_data = True
install_requires =
  # Pin versions for stability, allow compatible upgrades using ~= or range >=, <
  openai ~= 1.25 # Compatible with 1.25.x up to 1.x.x
  google-generativeai >= 0.5.2, < 0.7.0 # Specify a reasonable range
  anthropic >= 0.25.0, < 0.28.0 # Allow minor updates within 0.25 - 0.27
  groq >= 0.5.0, < 0.9.0 # Allow minor updates within 0.5 - 0.8
  ollama >= 0.1.9, < 0.3.0 # ollama lib might change faster, allow updates in 0.1.x, 0.2.x

[options.entry_points]
console_scripts =
  tulp = tulp.cli:run

[options.package_data]
# Include non-python files like the openapi.yaml if needed by the package at runtime
# Ensure the path is relative to the package directory (tulp/)
# tulp = llms/openapi.yaml # Commenting out as this file wasn't provided earlier

[options.packages.find]
exclude =
  tests
  tests.*
  # Exclude __pycache__ explicitly if needed, though build tools often handle this
  # **/__pycache__
